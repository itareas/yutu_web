<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yutu.mapper.mysql.TSysRoleMapper">
  <resultMap id="BaseResultMap" type="com.yutu.entity.table.TSysRole">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="role_parent" jdbcType="VARCHAR" property="roleParent" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_status" jdbcType="INTEGER" property="roleStatus" />
    <result column="order_by" jdbcType="INTEGER" property="orderBy" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, role_parent, role_name, role_status, order_by, delete_status, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_role
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_sys_role
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yutu.entity.table.TSysRole">
    insert into t_sys_role (uuid, role_parent, role_name, 
      role_status, order_by, delete_status, 
      remarks)
    values (#{uuid,jdbcType=VARCHAR}, #{roleParent,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleStatus,jdbcType=INTEGER}, #{orderBy,jdbcType=INTEGER}, #{deleteStatus,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yutu.entity.table.TSysRole">
    insert into t_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="roleParent != null">
        role_parent,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleStatus != null">
        role_status,
      </if>
      <if test="orderBy != null">
        order_by,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="roleParent != null">
        #{roleParent,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="orderBy != null">
        #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yutu.entity.table.TSysRole">
    update t_sys_role
    <set>
      <if test="roleParent != null">
        role_parent = #{roleParent,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="orderBy != null">
        order_by = #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yutu.entity.table.TSysRole">
    update t_sys_role
    set role_parent = #{roleParent,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_status = #{roleStatus,jdbcType=INTEGER},
      order_by = #{orderBy,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>